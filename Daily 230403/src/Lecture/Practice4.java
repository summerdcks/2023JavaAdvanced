package Lecture;

public class Practice4 {	//클래스 선언

	public static void main(String[] args) {	//메인함수 선언
		//#4 원하는 자릿수 반올림, 버림처리
		int k36_ii = 12345;		//integer형 변수를 선언하며 12345로 초기화
		int k36_j = (k36_ii / 10) * 10;	//10원 이하 버림처리
		System.out.printf("#4-1 : %d\n", k36_j);
		
		k36_ii = 12345;	//integer형 변수를 선언하며 12345로 초기화
		k36_j = ((k36_ii + 5) / 10) * 10;	//10원 이하 반올림 처리, 5를 더해서 10이 넘으면 올림처리	
		System.out.printf("#4-2 : %d\n", k36_j);
		
		k36_ii = 12344;	//integer형 변수를 선언하며 12344로 초기화
		k36_j = ((k36_ii + 5) / 10) * 10;	//10원 이하 반올림 처리, 5를 더해서 10이 되지 않으면 버림처리
		System.out.printf("#4-2 : %d\n", k36_j);
		
		//#4-x. 100원이하 버림올림, 1000원이하 버림반올림을 구현하라
		k36_ii = 12345;
		k36_j = (k36_ii / 100) * 100;	//100원 이하 버림처리
		System.out.printf("#4-3 : %d\n", k36_j);
		
		k36_ii = 12345;	//100원 이하 올림처리
		if((double)(k36_ii / 100.0) == (k36_ii / 100)) {		
			//실수형 연산값과 정수형 연산값이 같으면 소수점 이하가 0이라는 뜻이므로 해당값을 그대로 출력
			k36_j = (k36_ii / 100) * 100;			
		} else {
			k36_j = ((k36_ii / 100) + 1) * 100;				
			//실수형 연산값과 정수형 연산값이 다르면 소수점 이하에 값이 있으므로 1을 더해서 올림처리
		}
		System.out.printf("#4-4 : %d\n", k36_j);	
		
		k36_ii = 12345;
		k36_j = (k36_ii / 1000) * 1000;	//1000원 이하 버림처리
		System.out.printf("#4-5 : %d\n", k36_j);
		
		k36_ii = 12345;
		k36_j = ((k36_ii + 500) / 1000) * 1000;	//1000원 이하 반올림 처리, 500을 더해서 1000이 되는 값이면 올림, 되지 않으면 버림
		System.out.printf("#4-6 : %d\n", k36_j);
	}

}
